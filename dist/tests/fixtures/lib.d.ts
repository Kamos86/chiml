export declare function add(a: number, b: number): number;
export declare function minus(a: number, b: number): Promise<number>;
export declare function multiply(a: number, b: number, callback: (error: Error, result: number) => void): void;
export declare function square(x: number): number;
export declare const syncFunction: typeof add;
export declare function errorSyncFunction(a: number, b: number): void;
export declare function asyncFunction(a: number, b: number): Promise<number>;
export declare function errorAsyncFunction(a: number, b: number): Promise<number>;
export declare function functionWithCallback(a: number, b: number, cb: (error: any, result: any) => void): void;
export declare function functionWithCallbackYieldError(a: number, b: number, cb: (error: any) => void): void;
export declare function functionWithCallbackAndMultipleReturn(a: number, b: number, cb: (error: any, ...result: any[]) => void): void;
export declare function multipleMinusWithCallback(a: any, b: any, c: any, cb: any): void;
export declare function plusAndMinusWithCallback(a: any, b: any, c: any, cb: any): void;
export declare const cmd: string;
export declare const rootSquare: string;
export declare const hello: string;
export declare const greeting: string;
export declare const greetingWithParams: string;
export declare const resolvingPromise: Promise<number>;
export declare const rejectingPromise: Promise<never>;
